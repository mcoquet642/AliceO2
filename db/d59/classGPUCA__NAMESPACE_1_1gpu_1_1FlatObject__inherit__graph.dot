digraph "GPUCA_NAMESPACE::gpu::FlatObject"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{GPUCA_NAMESPACE::gpu\l::FlatObject\n|# mFlatBufferSize\l# mConstructionMask\l# mFlatBufferContainer\l# mFlatBufferPtr\l|+ FlatObject()\l+ ~FlatObject()\l+ FlatObject()\l+ operator=()\l+ destroy()\l+ getFlatBufferSize()\l+ getFlatBufferPtr()\l+ isConstructed()\l+ isBufferInternal()\l+ adoptInternalBuffer()\l+ clearInternalBufferPtr()\l+ printC()\l+ alignSize()\l+ relocatePointer()\l+ writeToFile()\l+ readFromFile()\l+ stressTest()\l# startConstruction()\l# finishConstruction()\l# cloneFromObject()\l# releaseInternalBuffer()\l# moveBufferTo()\l# setActualBufferAddress()\l# setFutureBufferAddress()\l# ClassDefNV()\l# getClassAlignmentBytes()\l# getBufferAlignmentBytes()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{GPUCA_NAMESPACE::gpu\l::IrregularSpline1D\n|+ const\l+ u1\l+ u2\l+ u3\l+ c0\l+ c1\l+ c2\l+ c3\l|+ IrregularSpline1D()\l+ IrregularSpline1D()\l+ operator=()\l+ ~IrregularSpline1D()\l+ cloneFromObject()\l+ destroy()\l+ construct()\l+ constructRegular()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ getNumberOfAxisBins()\l+ GPUd()\l+ print()\l+ getBufferAlignmentBytes()\l+ getDataAlignmentBytes()\l}",height=0.2,width=0.4,color="black",URL="$de/d7d/classGPUCA__NAMESPACE_1_1gpu_1_1IrregularSpline1D.html"];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{GPUCA_NAMESPACE::gpu\l::IrregularSpline2D3D\n|+ u\l+ v\l+ x\l+ y\l+ const\l+ u\l+ const\l|+ IrregularSpline2D3D()\l+ IrregularSpline2D3D()\l+ operator=()\l+ ~IrregularSpline2D3D()\l+ cloneFromObject()\l+ destroy()\l+ moveBufferTo()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ construct()\l+ constructRegular()\l+ GPUd()\l+ GPUd()\l+ GPUgeneric()\l+ GPUgeneric()\l+ GPUgeneric()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ getFlatBufferSize()\l+ getFlatBufferPtr()\l+ getGridUOffset()\l+ getGridVOffset()\l+ print()\l+ getClassAlignmentBytes()\l+ getBufferAlignmentBytes()\l+ getDataAlignmentBytes()\l}",height=0.2,width=0.4,color="black",URL="$d5/d77/classGPUCA__NAMESPACE_1_1gpu_1_1IrregularSpline2D3D.html"];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{GPUCA_NAMESPACE::gpu\l::SemiregularSpline2D3D\n||+ SemiregularSpline2D3D()\l+ SemiregularSpline2D3D()\l+ operator=()\l+ ~SemiregularSpline2D3D()\l+ cloneFromObject()\l+ destroy()\l+ moveBufferTo()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ construct()\l+ correctEdges()\l+ getSpline()\l+ getSplineVec()\l+ getNumberOfKnots()\l+ getNumberOfRows()\l+ getGridV()\l+ getGridU()\l+ getKnotUV()\l+ getFlatBufferSize()\l+ getDataIndex()\l+ getDataIndex0()\l+ getDataIndexMapOffset()\l+ getFlatBufferPtr()\l+ getSplineArray()\l+ getDataIndexMap()\l+ getClassAlignmentBytes()\l+ getBufferAlignmentBytes()\l+ getDataAlignmentBytes()\l}",height=0.2,width=0.4,color="black",URL="$d2/def/classGPUCA__NAMESPACE_1_1gpu_1_1SemiregularSpline2D3D.html"];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{GPUCA_NAMESPACE::gpu\l::Spline1DContainer\<\l DataT \>\n|+ xMax\l# mYdim\l# mNumberOfKnots\l# mUmax\l# mXmin\l# mXtoUscale\l# mUtoKnotMap\l# mParameters\l|+ GPUd()\l+ Spline1DContainer()\l+ Spline1DContainer()\l+ ~Spline1DContainer()\l+ approximateFunction()\l+ writeToFile()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ print()\l+ GPUd()\l+ cloneFromObject()\l+ moveBufferTo()\l+ destroy()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ readFromFile()\l+ test()\l# getKnots()\l# getUtoKnotMap()\l# recreate()\l# recreate()\l# ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$df/dfd/classGPUCA__NAMESPACE_1_1gpu_1_1Spline1DContainer.html"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{GPUCA_NAMESPACE::gpu\l::Spline1DSpec\< DataT,\l YdimT, 0 \>\n|+ u\l+ knotL\l+ u\l|+ GPUd()\l+ GPUgeneric()\l+ GPUd()\l+ GPUgeneric()\l+ GPUgeneric()\l+ GPUd()\l+ GPUgeneric()\l+ GPUgeneric()\l+ GPUgeneric()\l+ GPUgeneric()\l+ GPUgeneric()\l# ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dd/d56/classGPUCA__NAMESPACE_1_1gpu_1_1Spline1DSpec_3_01DataT_00_01YdimT_00_010_01_4.html"];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{GPUCA_NAMESPACE::gpu\l::Spline1DSpec\< DataT,\l YdimT, 1 \>\n|+ u\l|+ Spline1DSpec()\l+ Spline1DSpec()\l+ Spline1DSpec()\l+ Spline1DSpec()\l+ recreate()\l+ recreate()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUgeneric()\l}",height=0.2,width=0.4,color="black",URL="$d1/d66/classGPUCA__NAMESPACE_1_1gpu_1_1Spline1DSpec_3_01DataT_00_01YdimT_00_011_01_4.html"];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{GPUCA_NAMESPACE::gpu\l::Spline1DSpec\< DataT,\l YdimT, 2 \>\n||+ Spline1DSpec()\l+ Spline1DSpec()\l+ Spline1DSpec()\l+ Spline1DSpec()\l+ recreate()\l+ recreate()\l+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$da/dbc/classGPUCA__NAMESPACE_1_1gpu_1_1Spline1DSpec_3_01DataT_00_01YdimT_00_012_01_4.html"];
  Node0 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{GPUCA_NAMESPACE::gpu\l::Spline2DContainer\<\l DataT \>\n|+ u1\l+ const\l+ u2\l+ const\l+ x1Max\l+ x2Min\l+ x2Max\l# mYdim\l# mGridX1\l# mGridX2\l# mParameters\l|+ GPUd()\l+ Spline2DContainer()\l+ Spline2DContainer()\l+ ~Spline2DContainer()\l+ approximateFunction()\l+ writeToFile()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ setXrange()\l+ print()\l+ GPUd()\l+ cloneFromObject()\l+ moveBufferTo()\l+ destroy()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ readFromFile()\l+ test()\l# recreate()\l# recreate()\l# ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dc/d7b/classGPUCA__NAMESPACE_1_1gpu_1_1Spline2DContainer.html"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{GPUCA_NAMESPACE::gpu\l::Spline2DSpec\< DataT,\l YdimT, 0 \>\n|+ x2\l+ u1\l+ u2\l|+ GPUd()\l+ GPUgeneric()\l+ GPUd()\l+ GPUgeneric()\l+ GPUgeneric()\l}",height=0.2,width=0.4,color="black",URL="$df/d9c/classGPUCA__NAMESPACE_1_1gpu_1_1Spline2DSpec_3_01DataT_00_01YdimT_00_010_01_4.html"];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{GPUCA_NAMESPACE::gpu\l::Spline2DSpec\< DataT,\l YdimT, 1 \>\n|+ u1\l+ u2\l|+ Spline2DSpec()\l+ Spline2DSpec()\l+ Spline2DSpec()\l+ Spline2DSpec()\l+ recreate()\l+ recreate()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUgeneric()\l}",height=0.2,width=0.4,color="black",URL="$d7/df3/classGPUCA__NAMESPACE_1_1gpu_1_1Spline2DSpec_3_01DataT_00_01YdimT_00_011_01_4.html"];
  Node9 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{GPUCA_NAMESPACE::gpu\l::Spline2DSpec\< DataT,\l YdimT, 2 \>\n||+ Spline2DSpec()\l+ Spline2DSpec()\l+ Spline2DSpec()\l+ Spline2DSpec()\l+ recreate()\l+ recreate()\l}",height=0.2,width=0.4,color="black",URL="$d1/dfa/classGPUCA__NAMESPACE_1_1gpu_1_1Spline2DSpec_3_01DataT_00_01YdimT_00_012_01_4.html"];
  Node0 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{GPUCA_NAMESPACE::gpu\l::SplineContainer\< DataT \>\n|+ const\l# mXdim\l# mYdim\l# mNknots\l# mGrid\l# mParameters\l|+ GPUd()\l+ SplineContainer()\l+ SplineContainer()\l+ ~SplineContainer()\l+ approximateFunction()\l+ writeToFile()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ setXrange()\l+ print()\l+ GPUd()\l+ GPUd()\l+ cloneFromObject()\l+ moveBufferTo()\l+ destroy()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ readFromFile()\l+ test()\l# recreate()\l# recreate()\l# ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d1/dc2/classGPUCA__NAMESPACE_1_1gpu_1_1SplineContainer.html"];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{GPUCA_NAMESPACE::gpu\l::SplineSpec\< DataT,\l XdimT, YdimT, 0 \>\n|+ inpYdim\l+ u\l|+ GPUd()\l+ GPUgeneric()\l+ GPUd()\l+ GPUgeneric()\l+ GPUgeneric()\l}",height=0.2,width=0.4,color="black",URL="$d0/d0e/classGPUCA__NAMESPACE_1_1gpu_1_1SplineSpec_3_01DataT_00_01XdimT_00_01YdimT_00_010_01_4.html"];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{GPUCA_NAMESPACE::gpu\l::SplineSpec\< DataT,\l XdimT, YdimT, 1 \>\n|+ u\l|+ SplineSpec()\l+ SplineSpec()\l+ SplineSpec()\l+ SplineSpec()\l+ recreate()\l+ recreate()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUgeneric()\l}",height=0.2,width=0.4,color="black",URL="$d8/d65/classGPUCA__NAMESPACE_1_1gpu_1_1SplineSpec_3_01DataT_00_01XdimT_00_01YdimT_00_011_01_4.html"];
  Node13 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{GPUCA_NAMESPACE::gpu\l::SplineSpec\< DataT,\l XdimT, YdimT, 2 \>\n||+ SplineSpec()\l+ SplineSpec()\l+ SplineSpec()\l+ SplineSpec()\l+ recreate()\l+ recreate()\l+ checkDimensions()\l}",height=0.2,width=0.4,color="black",URL="$d7/de2/classGPUCA__NAMESPACE_1_1gpu_1_1SplineSpec_3_01DataT_00_01XdimT_00_01YdimT_00_012_01_4.html"];
  Node0 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{GPUCA_NAMESPACE::gpu\l::TPCdEdxCalibrationSplines\n|+ const\l+ angleZ\l+ const\l|+ TPCdEdxCalibrationSplines()\l+ TPCdEdxCalibrationSplines()\l+ TPCdEdxCalibrationSplines()\l+ operator=()\l+ recreate()\l+ ~TPCdEdxCalibrationSplines()\l+ cloneFromObject()\l+ moveBufferTo()\l+ destroy()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ GPUd()\l+ setSplinesFromFile()\l+ setDefaultSplines()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ writeToFile()\l+ readFromFile()\l}",height=0.2,width=0.4,color="black",URL="$d6/da0/classGPUCA__NAMESPACE_1_1gpu_1_1TPCdEdxCalibrationSplines.html"];
  Node0 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{GPUCA_NAMESPACE::gpu\l::TPCFastSpaceChargeCorrection\n|+ const\l+ row\l+ iSpline\l+ u\l+ v\l+ dx\l+ du\l+ const\l+ corrU\l+ corrV\l+ const\l+ nomU\l+ const\l+ const\l|+ TPCFastSpaceChargeCorrection()\l+ TPCFastSpaceChargeCorrection()\l+ operator=()\l+ ~TPCFastSpaceChargeCorrection()\l+ cloneFromObject()\l+ destroy()\l+ moveBufferTo()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ startConstruction()\l+ setRowScenarioID()\l+ setSplineScenario()\l+ finishConstruction()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUh()\l+ GPUh()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ getTimeStamp()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ print()\l+ GPUh()\l}",height=0.2,width=0.4,color="black",URL="$d6/d2c/classGPUCA__NAMESPACE_1_1gpu_1_1TPCFastSpaceChargeCorrection.html"];
  Node0 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{GPUCA_NAMESPACE::gpu\l::TPCFastTransform\n|+ row\l+ pad\l+ time\l+ x\l+ y\l+ z\l+ vertexTime\l+ const\l+ float\l+ y\l+ z\l+ pad\l+ time\l+ const\l+ const\l+ ny\l+ const\l+ const\l+ u\l+ v\l+ const\l+ u\l+ v\l+ time\l+ const\l+ time\l+ const\l+ z\l+ const\l+ const\l+ zOffset\l+ vertexTime\l+ x\l+ y\l+ z\l+ const\l+ const\l+ const\l|+ TPCFastTransform()\l+ TPCFastTransform()\l+ operator=()\l+ ~TPCFastTransform()\l+ cloneFromObject()\l+ moveBufferTo()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ startConstruction()\l+ setCalibration()\l+ setTimeStamp()\l+ GPUd()\l+ getCorrection()\l+ finishConstruction()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ setApplyCorrectionOn()\l+ setApplyCorrectionOff()\l+ isCorrectionApplied()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ writeToFile()\l+ print()\l+ getClassAlignmentBytes()\l+ getBufferAlignmentBytes()\l+ loadFromFile()\l}",height=0.2,width=0.4,color="black",URL="$d2/d47/classGPUCA__NAMESPACE_1_1gpu_1_1TPCFastTransform.html"];
}
