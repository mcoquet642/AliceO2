digraph "o2::globaltracking::ABDebugTrack"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::globaltracking\l::ABDebugTrack\n||+ ClassDefNV()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +nClusITSCorr\n+nClusITS\n+sideAC\n+nClusTPC" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{uint8_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +chi2" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{float\n||}",height=0.2,width=0.4,color="black",URL="$d4/dc3/classfloat.html"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +icTimeBin" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{o2::math_utils::detail\l::Bracket\< float \>\n||+ Bracket()\l+ Bracket()\l+ Bracket()\l+ Bracket()\l+ operator=()\l+ operator=()\l+ ~Bracket()\l+ operator\<()\l+ operator\<()\l+ operator\>()\l+ operator\>()\l+ operator==()\l+ operator!=()\l+ setMax()\l+ setMin()\l+ set()\l+ getMax()\l+ getMax()\l+ getMin()\l+ getMin()\l+ mean()\l+ delta()\l+ isValid()\l+ isInvalid()\l+ update()\l+ isOutside()\l+ isOutside()\l}",height=0.2,width=0.4,color="black",URL="$df/df1/classo2_1_1math__utils_1_1detail_1_1Bracket.html"];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< float \>" ,fontname="Helvetica"];
  Node5 [label="{o2::math_utils::detail\l::Bracket\< T \>\n||+ Bracket()\l+ Bracket()\l+ Bracket()\l+ Bracket()\l+ operator=()\l+ operator=()\l+ ~Bracket()\l+ operator\<()\l+ operator\>()\l+ operator\<()\l+ operator\>()\l+ operator==()\l+ operator!=()\l+ setMax()\l+ setMin()\l+ set()\l+ getMax()\l+ getMin()\l+ getMax()\l+ getMin()\l+ mean()\l+ delta()\l+ isValid()\l+ isInvalid()\l+ update()\l+ isOutside()\l+ isOutside()\l}",height=0.2,width=0.4,color="black",URL="$df/df1/classo2_1_1math__utils_1_1detail_1_1Bracket.html"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +valid\n+order" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{short\n||}",height=0.2,width=0.4,color="black",URL="$dc/d10/classshort.html"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +links" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{vector\< o2::globaltracking\l::ABDebugLink \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +trackID\n+icCand" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +tpcSeed" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{TrackParametrizationWith\lError\< float \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +tpcLabel" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{o2::MCCompLabel\n||+ MCCompLabel()\l+ MCCompLabel()\l+ ~MCCompLabel()\l+ isSet()\l+ isEmpty()\l+ isNoise()\l+ isValid()\l+ isFake()\l+ isCorrect()\l+ compare()\l+ operator ULong64_t()\l+ getRawValue()\l+ operator==()\l+ unset()\l+ setNoise()\l+ setFakeFlag()\l+ set()\l+ getTrackID()\l+ getTrackIDSigned()\l+ getEventID()\l+ getSourceID()\l+ getTrackEventSourceID()\l+ get()\l+ print()\l+ ClassDefNV()\l+ maxSourceID()\l+ maxEventID()\l+ maxTrackID()\l}",height=0.2,width=0.4,color="black",URL="$de/def/classo2_1_1MCCompLabel.html"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +maskFull\n+maskSrcID\n+maskEvID\n+maskTrackID" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{ULong64_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +nbitsSrcID\n+nbitsTrackID\n+nbitsEvID" ,arrowhead="odiamond",fontname="Helvetica"];
}
